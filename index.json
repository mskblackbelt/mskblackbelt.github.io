[{"content":"","date":"8 February 2024","externalUrl":null,"permalink":"/","section":"","summary":"","title":"","type":"page"},{"content":"title: Blog\n","date":"8 February 2024","externalUrl":null,"permalink":"/blog/","section":"","summary":"title: Blog","title":"","type":"blog"},{"content":"In an effort to reduce the number of concepts my students need to learn in Physical Chemistry lab, I\u0026rsquo;m trying to cut down the number of Python methods I introduce to them. One of the places where there are many options is in the realm of curve fitting. For a simple linear fit, just SciPy and NumPy offer at least three separate options:\nNumPy offers the Polynomial.fit() method (which replaces the old polyfit() method often found in tutorials). This is a fast, flexible way to work with polynomial functions and fits, but I find the distinction between \u0026ldquo;domain\u0026rdquo; and \u0026ldquo;window\u0026rdquo; for the functions to be far too confusing to want to discuss with students. SciPy offers the linregress() function inside the stats module. This is probably the easiest method to introduce to students, as it\u0026rsquo;s a simple linear regression and returns the same statistics students have seen in Excel fits (including the statistics returned with the LINEST function). SciPy also offers the curve_fit() function in the optimize module, a powerful routine that performs curve-fitting on arbitrarily defined functions. It\u0026rsquo;s capable of returning simple fit parameters as well as complete statistics. It can also take in weights for the individual data points, useful for large datasets where this information is available. Again, my motivation is to reduce the mental overhead in learning to fit data with Python. If the only data students ever worked with was linear (and it is possible to transform almost all their data into linear models), the linregress() function would probably be the best choice. Unfortunately, it\u0026rsquo;s limited to linear fits and so can\u0026rsquo;t be used for higher order polynomials or non-linear functions (exponential, log, and sigmoidal functions frequently appear in chemistry).\nThis leaves me leaning toward using curve_fit(), but I wanted to know what the cost to defaulting to this function might be. Below is my simple comparison of the three methods on a linear fit and then a comparison of Polynomial.fit() and curve_fit() on a higher-order polynomial. The contents of my Jupyter notebook are shown below.\nCurve fit algorithm comparison # Create and plot some data.\nimport numpy as np # Nice to set a seed for the random number generator, # this produces the same \u0026#34;random\u0026#34; numbers each time. np.random.seed(2342) # Create an array of x values x = np.arange(1, 11) # Produce y values from a model line m = 4 b = 2 y = m*x + b # Add random variations to our signal ys = y + np.random.normal(scale=np.sqrt(np.mean(y)), size=len(x)) # Create a plot plt.plot(x, ys, \u0026#39;o\u0026#39;) plt.title(\u0026#39;Sample data\u0026#39;) plt.xlabel(\u0026#39;Independent Variable, $x$\u0026#39;) plt.ylabel(\u0026#39;Dependent Variable, $y$\u0026#39;) plt.show() Method 1: scipy.stats.linregress # from scipy import stats reg = stats.linregress(x, ys) # Line of best fit reg_ys = reg.slope * x + reg.intercept # Associated error reg_error = ys - reg_ys deg_of_freedom = len(x) - 2 res_std_err = np.sqrt(np.sum(reg_error**2) / deg_of_freedom) print(*reg[:2]) # Create a plot plt.plot(x, ys, \u0026#39;o\u0026#39;, label=\u0026#39;Raw data\u0026#39;) plt.plot(x, m * xlim + b, \u0026#39;k--\u0026#39;, label=\u0026#39;True underlying relationship\u0026#39;) plt.plot(x, reg.slope * xlim + reg.intercept, \u0026#39;k\u0026#39;, label=\u0026#39;Line of best fit\u0026#39;) plt.title(\u0026#39;Example Data\u0026#39;) plt.xlabel(r\u0026#39;Independent Variable, $x$\u0026#39;) plt.ylabel(r\u0026#39;Dependent Variable, $y$\u0026#39;) plt.show() Output: 4.693247667996253 -1.4115640583981168\nFit using Polynomial.fit from NumPy # from numpy.polynomial.polynomial import Polynomial p = Polynomial.fit(x, ys, 1, window=(1,10)) print(*p.coef[::-1]) # Create a plot plt.plot(x, ys, \u0026#39;o\u0026#39;, label=\u0026#39;Raw data\u0026#39;) plt.plot(x, m * x + b, \u0026#39;k--\u0026#39;, label=\u0026#39;True underlying relationship\u0026#39;) plt.plot(x, p(x), \u0026#39;k\u0026#39;, label=\u0026#39;Line of best fit\u0026#39;) plt.title(\u0026#39;Example Data\u0026#39;) plt.xlabel(r\u0026#39;Independent Variable, $x$\u0026#39;) plt.ylabel(r\u0026#39;Dependent Variable, $y$\u0026#39;) plt.show() Output: 4.6932476679962525 -1.411564058398124\nFit using sp.curve_fit # from scipy.optimize import curve_fit def lin_func(x, m, b): return m*x + b popt, pcov = curve_fit(lin_func, x, ys) print(*popt) # Create a plot plt.plot(x, ys, \u0026#39;o\u0026#39;, label=\u0026#39;Raw data\u0026#39;) plt.plot(x, m * x + b, \u0026#39;k--\u0026#39;, label=\u0026#39;True underlying relationship\u0026#39;) plt.plot(x, lin_func(x, *popt), \u0026#39;k\u0026#39;, label=\u0026#39;Line of best fit\u0026#39;) plt.title(\u0026#39;Example Data\u0026#39;) plt.xlabel(r\u0026#39;Independent Variable, $x$\u0026#39;) plt.ylabel(r\u0026#39;Dependent Variable, $y$\u0026#39;) plt.show() Output: 4.693247668004307 -1.4115640584033717\nCompare the time of the three methods # %%timeit reg = stats.linregress(x, ys) Result: 55.1 µs ± 274 ns per loop (mean ± std. dev. of 7 runs, 10,000 loops each)\n%%timeit # Fit a polynomial of degree 1 (a linear function) to the data p = np.polyfit(x, ys, 1) Result: 33.4 µs ± 361 ns per loop (mean ± std. dev. of 7 runs, 10,000 loops each)\n%%timeit # Fit the function m * t + c to x and y popt, pcov = curve_fit(lin_func, x, y) Result: 124 µs ± 932 ns per loop (mean ± std. dev. of 7 runs, 10,000 loops each)\nn = 11 print(*np.round(reg[:2],n)) print(*np.round(p.coef[::-1],n)) print(*np.round(popt,n)) del(n) Comparison of fit results:\n4.693247668 -1.4115640584 4.693247668 -1.4115640584 4.693247668 -1.4115640584 Something a bit more complicated: a 5th-degree polynomial # from numpy.polynomial.polynomial import Polynomial # Generate some more x points x = np.linspace(-7,4) # Make a new set of y values p5 = Polynomial([4,1,-1,0.1,0.05]) y = p5(x) y = y + np.random.normal(scale=np.sqrt(np.mean(y)), size=len(x)) # Add noise # Create a plot plt.plot(x, y, \u0026#39;o\u0026#39;) plt.title(\u0026#39;Sample Data\u0026#39;) plt.xlabel(r\u0026#39;Independent Variable, $x$\u0026#39;) plt.ylabel(r\u0026#39;Dependent Variable, $y$\u0026#39;) plt.show() p = Polynomial.fit(x, y, 4, window=(-7,4)) # Create a plot plt.plot(x, y, \u0026#39;o\u0026#39;, label=\u0026#39;Raw data\u0026#39;) plt.plot(x, p5(x), \u0026#39;--\u0026#39;, c=\u0026#39;grey\u0026#39;, label=\u0026#39;True model\u0026#39;) plt.plot(x, p(x), \u0026#39;k-\u0026#39;, label=\u0026#39;Curve of best fit\u0026#39;) plt.title(\u0026#39;Sample data\u0026#39;) plt.xlabel(r\u0026#39;Independent Variable, $x$\u0026#39;) plt.ylabel(r\u0026#39;Dependent Variable, $y$\u0026#39;) plt.show() def p5_func(x, a, b, c, d, e): return a + b*x + c*x**2 + d*x**3 + e*x**4 popt, pcov = curve_fit(p5_func, x, y) # Create a plot plt.plot(x, y, \u0026#39;o\u0026#39;, label=\u0026#39;Raw data\u0026#39;) plt.plot(x, p5(x), \u0026#39;--\u0026#39;, c=\u0026#39;grey\u0026#39;, label=\u0026#39;True model\u0026#39;) plt.plot(x, p5_func(x, *popt), \u0026#39;k\u0026#39;, label=\u0026#39;Curve of best fit\u0026#39;) plt.title(\u0026#39;Sample Data\u0026#39;) plt.xlabel(r\u0026#39;Independent Variable, $x$\u0026#39;) plt.ylabel(r\u0026#39;Dependent Variable, $y$\u0026#39;) plt.show() %%timeit # Fit a polynomial of degree 5 to the data p = Polynomial.fit(x, y, 4, window=(-7,4)) Result: 102 µs ± 297 ns per loop (mean ± std. dev. of 7 runs, 10,000 loops each)\n%%timeit popt, pcov = curve_fit(p5_func, x, y) Result: 301 µs ± 2.63 µs per loop (mean ± std. dev. of 7 runs, 1,000 loops each)\nn = 6 print(np.round(p.coef,n)) print(np.round(popt, n)) del(n) Comparison of fit results:\n[ 4.305776 1.177208 -0.960277 0.087459 0.047794] [ 4.305776 1.177208 -0.960277 0.087459 0.047794] ","date":"8 February 2024","externalUrl":null,"permalink":"/blog/curve_fitting_comparison/curve_fitting_comparison/","section":"","summary":"In an effort to reduce the number of concepts my students need to learn in Physical Chemistry lab, I\u0026rsquo;m trying to cut down the number of Python methods I introduce to them.","title":"Comparison of NumPy and SciPy curve fitting algorithms","type":"blog"},{"content":"","date":"8 February 2024","externalUrl":null,"permalink":"/tags/python/","section":"Tags","summary":"","title":"Python","type":"tags"},{"content":"","date":"8 February 2024","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"","date":"8 February 2024","externalUrl":null,"permalink":"/tags/til/","section":"Tags","summary":"","title":"TIL","type":"tags"},{"content":"","date":"29 January 2024","externalUrl":null,"permalink":"/tags/shell_scripting/","section":"Tags","summary":"","title":"Shell_scripting","type":"tags"},{"content":"I just spent far too long toying with creating a shell completion for my Zsh setup… On the surface, all I wanted was a simple function to take a graded assignment and return it to a student. Last fall, I put together a script using the install function to do precisely this (wanted to copy a file owned by my user over to a students folder with the appropriate permissions). The script itself looks like this:\nreturn_graded () { sudo install -g \u0026#34;$1\u0026#34; -o \u0026#34;$1\u0026#34; -m 0755 -t \u0026#34;/home/$1/Graded\u0026#34; -D $2 } For completions, I wanted Zsh to prompt me with a list of users on the system for the first argument and a list of files for the second argument. Unfortunately, finding a simple example of a completion function (along with directions on how to name it and where to place it) was quite difficult. After much searching and reading through many posts that gave small pieces of the answer (along with the man page for zshcompsys, which showed all the necessary tags), I managed to put together the following simple file, located at ~/.local/zsh-completions, a folder I made sure to add to my $fpath variable in .zshrc.\n#compdef _return_graded return_graded _return_graded() { _arguments \u0026#39;: :_users\u0026#39; \u0026#39;: :_files\u0026#39; } The first line tells Zsh this is a completion definition file (and I\u0026rsquo;m not sure whether just one or both function names are required afterward). The next lines define the completion function. From what I can tell, preceding the completion function with an underscore is an agreed-upon standard to keep the completion functions out of the normal function namespace. The zshcompsys man page gives some details about using the _arguments function to set completions for specific arguments. The _users and _files tags are built into zshcompsys, so I just had to look up their names. While it\u0026rsquo;s possible to set keyword arguments with specific completions, I\u0026rsquo;m fine with my arguments being unnamed and strictly ordered (there\u0026rsquo;s only two…). So long as the arguments are in order, there\u0026rsquo;s no need to add numbers, but '1: :_users' '2: :_files' would let you explicitly (or out-of-order) label the arguments. The space (or a descriptive title for the completion) between the two colons is required. The long form of the above completion would be _arguments '1:Username:_users' '2:Filename:_files:'. Both versions have the same effect on the final product.\nFurther steps # Someday, I may decide that returning assignments one at a time is too slow and figure out how to let return_graded take multiple files at the end (should be simple). At that point, I\u0026rsquo;ll have to modify the _files completion to take all remaining arguments, but until then, this gets the job done.\n","date":"29 January 2024","externalUrl":null,"permalink":"/blog/zsh_completions/","section":"","summary":"I just spent far too long toying with creating a shell completion for my Zsh setup… On the surface, all I wanted was a simple function to take a graded assignment and return it to a student.","title":"Z-shell completions","type":"blog"},{"content":"","date":"29 January 2024","externalUrl":null,"permalink":"/tags/zsh/","section":"Tags","summary":"","title":"Zsh","type":"tags"},{"content":"","date":"29 January 2024","externalUrl":null,"permalink":"/tags/zsh_completions/","section":"Tags","summary":"","title":"Zsh_completions","type":"tags"},{"content":"Ran across an issue I’ve encountered many times before and finally decided it was irritating enough to research. Something I’ve occasionally wanted to do is apply an operation as sudo to a number of files in a directory or group of directories. The easiest example is listing all the files of a given type from a group of directories.\nIf elevated privileges aren’t required, ls **/*.py will list all the python files in every subdirectory of a given location. However, sudo ls **/*.py will fail with the error that File *.py not found.. A bit of reading revealed that this happens because the action of globbing occurs before the call to sudo happens, so calling sudo doesn’t help to reveal any of the files in inaccessible folders. The way to correct this is to call the ls **/*.py file in a subshell and use sudo to launch the subshell, like so: sudo zsh -c ‘ls **/*.py’. This will run the command as sudo and let the shell do the globbing with the correct privileges. Lesson learned, need to remember to run more commands as subshells!\n","date":"12 January 2024","externalUrl":null,"permalink":"/blog/globbing_with_sudo/","section":"","summary":"Ran across an issue I’ve encountered many times before and finally decided it was irritating enough to research. Something I’ve occasionally wanted to do is apply an operation as sudo to a number of files in a directory or group of directories.","title":"Globbing with `sudo`","type":"blog"},{"content":"","date":"12 January 2024","externalUrl":null,"permalink":"/tags/shell/","section":"Tags","summary":"","title":"Shell","type":"tags"},{"content":"A colleague and I set out to rid ourselves of floppy disks in the teaching labs. Several of the control computers in the teaching labs are pretty old, some still still running Windows NT 4.0. Because of software and hardware requirements, OS upgrades are out of the question, and USB and CD-RW support are non-existent in NT. But all the machines are equipped with ethernet, so we decided to set up a small LAN. The trickiest part of the process was getting to the realization that NT 4.0 didn\u0026rsquo;t come with the TCP/IP stack installed by default… we had to pull out the NT install discs and have Windows install that stack before we could communicate with other machines.\nWhat a throwback, I\u0026rsquo;d forgotten (and wasn\u0026rsquo;t working deeply with networks at the time) that there were versions of Windows without TCP/IP. Last time I thought about TCP/IP being an optional component of Windows was probably when I was scrounging for space on my Windows 98 machine… a 13GB drive doesn’t go very far when you’re trying to install Windows alongside Linux and don’t know how to deal with Linux partitions.\n","date":"28 April 2023","externalUrl":null,"permalink":"/blog/network_share_nt_to_7/","section":"","summary":"A colleague and I set out to rid ourselves of floppy disks in the teaching labs. Several of the control computers in the teaching labs are pretty old, some still still running Windows NT 4.","title":"Creating a network share on Windows 7 (Pro) accessible from Windows NT 4.0","type":"blog"},{"content":"","date":"28 April 2023","externalUrl":null,"permalink":"/tags/networking/","section":"Tags","summary":"","title":"Networking","type":"tags"},{"content":"","date":"28 April 2023","externalUrl":null,"permalink":"/tags/windows/","section":"Tags","summary":"","title":"Windows","type":"tags"},{"content":"While my preferred (current) editor is Nova, occasionally I have reason to edit in Vim, particularly when I\u0026rsquo;m working on files on a remote server. Recently, I found myself wanting to comment multiple lines in a Python file. On my personal machines, I\u0026rsquo;ve installed [NerdCommenter][nerdcomment], but that isn\u0026rsquo;t always available.1\nFor those occasions, basic Vim line editing skills come in to play. First, you can toggle \u0026ldquo;Visual Line mode\u0026rdquo; by hitting Shift + V, then highlighting the relevant lines. From there, doing a simple replacement (:'\u0026lt;'\u0026gt;s/^/#/,2 or whatever your comment replacement should be) comments out the selected lines.\nAlternately, you can do a block selection (enter that mode with Ctrl+V), select the start of each line, then press Shift+I. Type out the pattern (it will only show up on a single line for the moment), press Esc, then press Enter and the changes will be applied to the whole block selection.\nThese methods are outlined in a post on ostechnix.com in methods 1 and 4.\nUsing NerdCommenter, selected (or current) line can be commented/uncommented with the toggle \u0026lt;Leader\u0026gt;c\u0026lt;space\u0026gt; (or commented with \u0026lt;Leader\u0026gt;cc and uncommented with \u0026lt;Leader\u0026gt;cu) [nerdcomment]: https://github.com/preservim/nerdcommenter\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nThe '\u0026lt;'\u0026gt; gets inserted as soon as you type :.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"9 March 2023","externalUrl":null,"permalink":"/blog/vim-comment-edit-lines/","section":"","summary":"While my preferred (current) editor is Nova, occasionally I have reason to edit in Vim, particularly when I\u0026rsquo;m working on files on a remote server. Recently, I found myself wanting to comment multiple lines in a Python file.","title":"How to make edits on multiple lines in Vim","type":"blog"},{"content":"","date":"9 March 2023","externalUrl":null,"permalink":"/tags/vim/","section":"Tags","summary":"","title":"Vim","type":"tags"},{"content":"","date":"7 March 2023","externalUrl":null,"permalink":"/tags/conda/","section":"Tags","summary":"","title":"Conda","type":"tags"},{"content":"While trying to set up some new packages in a conda environment, I accidentally \u0026ldquo;upgraded\u0026rdquo; to an incompatible version of one of the libraries. I created an environment to run Psi4 and wanted to add some new dependencies. Before proceeding, I decided to upgrade the packages in the environment using mamba upgrade --all. Before accepting the changes, I made sure there weren\u0026rsquo;t any major version upgrades, then proceeded with the upgrade. What I didn\u0026rsquo;t notice was that two of the libraries (libecpint and pint) were moved from the psi4 channel to the conda-forge channel. Psi4 is quite particular about it\u0026rsquo;s dependencies, so this change broke the installation.\nSince the \u0026ldquo;upgrade\u0026rdquo; was just a crossgrade (no version change, just a channel change), trying to fix it by adding the psi4 channel to the environment rc file (via conda config --env --add channels psi4) didn\u0026rsquo;t help. Nor did changing the channel priority from flexible to strict (conda config --env --set channel_priority strict). What did finally work was (probably) what I should have tried first: manually specify the location with the package install command. Running mamba install channel::package took care of the issue and everything is now working just fine.\n","date":"7 March 2023","externalUrl":null,"permalink":"/blog/conda-install-specific-channel/","section":"","summary":"While trying to set up some new packages in a conda environment, I accidentally \u0026ldquo;upgraded\u0026rdquo; to an incompatible version of one of the libraries. I created an environment to run Psi4 and wanted to add some new dependencies.","title":"Installing a `conda` package from a specific channel","type":"blog"},{"content":"","date":"24 February 2023","externalUrl":null,"permalink":"/tags/diy/","section":"Tags","summary":"","title":"DIY","type":"tags"},{"content":"","date":"24 February 2023","externalUrl":null,"permalink":"/tags/electronics/","section":"Tags","summary":"","title":"Electronics","type":"tags"},{"content":"While listening to the 2016 Christmas Shopping Show of The Ham Radio Workbench podcast, I learned about components for making your own wire. One of the hosts mentions that he keeps around \u0026ldquo;bus wire and spaghetti\u0026rdquo;. Bus wire is just solid core, tinned wire. Spaghetti is a colloquial term for wire sleeving, and it looks like you can get expandable and regular versions of the insulating stuff (and dozens of other types, including mesh for bundling cables).\n","date":"24 February 2023","externalUrl":null,"permalink":"/blog/wire-sleeving/","section":"","summary":"While listening to the 2016 Christmas Shopping Show of The Ham Radio Workbench podcast, I learned about components for making your own wire. One of the hosts mentions that he keeps around \u0026ldquo;bus wire and spaghetti\u0026rdquo;.","title":"TIL – Making your own cable (\u003cem\u003enot\u003c/em\u003e coax!)","type":"blog"},{"content":"","date":"24 February 2023","externalUrl":null,"permalink":"/tags/wiring/","section":"Tags","summary":"","title":"Wiring","type":"tags"},{"content":"","date":"22 February 2023","externalUrl":null,"permalink":"/tags/icloud-private-relay/","section":"Tags","summary":"","title":"ICloud Private Relay","type":"tags"},{"content":"","date":"22 February 2023","externalUrl":null,"permalink":"/tags/safari/","section":"Tags","summary":"","title":"Safari","type":"tags"},{"content":"I just spent the past 45 minutes trying to troubleshoot an internet connection problem on my work computers… While trying to set up Tapbots new Mastodon client [Ivory][ivory], I couldn\u0026rsquo;t get the authentication page to load in Safari. My campus connection periodically experiences issues due to any number of things: campus network problems, campus IT problems, campus IT blocking my local router, problems with my local router,1 etc. In fact, I\u0026rsquo;ve been experiencing periodic issues all day.\nI noticed that the Mastodon authentication page was having issues loading… because it\u0026rsquo;s an auth page, Safari won\u0026rsquo;t seem to let you copy the URL.2 in an early attempt to troubleshoot, I tried to load Down for Everyone or Just Me, but that also failed to load. I would have suspected my internet connection itself except that I was in the middle of an iMessage conversation with my wife and Apple Music was streaming without interruption.\nLately, I\u0026rsquo;ve been running [Orion][orion] as my main browser, so I haven\u0026rsquo;t been thinking much about my Safari setup. An odd observation I had was that pages were loading in Orion just fine, suggesting that the network and DNS3 weren\u0026rsquo;t to blame. My next thought was to start disabling as many extensions, apps, etc. as I could (all Safari extensions, my software firewall, assorted background services…). None of this had any effect. Finally, as I was poking through the Safari preferences, I noticed a little box under the Privacy pane for \u0026ldquo;Hide IP Address\u0026rdquo; with a pulldown menu for \u0026ldquo;from Trackers Only\u0026rdquo; and \u0026ldquo;from Trackers and Websites\u0026rdquo;. If you\u0026rsquo;re not familiar with this box, it\u0026rsquo;s tied into Apple\u0026rsquo;s [iCloud Private Relay][icloud-relay] service, which promises to \u0026ldquo;protect your privacy when you browse the web in Safari.\u0026rdquo;\nIt seems my campus network is incompatible with the Private Relay service though it works if I switch to \u0026ldquo;from Trackers Only\u0026rdquo;. Maybe it\u0026rsquo;s also broken this way, but the break is just localized to tracker loading, and that\u0026rsquo;s a happy side effect if true.\nSo here\u0026rsquo;s my long story about how iCloud Private Relay is still some funny tweaks on technology and the efforts to elude mass data surveillance result in highly inconvenient situations… so hooray capitalism!\nUncommon, and usually fixed with a reboot. [ivory]: https://tapbots.com/ivory\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nMy initial thought when Safari was having issues was to copy the URL and paste it into Orion.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nAs I\u0026rsquo;ve learned from IT experts on the internet, it\u0026rsquo;s always DNS! [orion]: https://browser.orion.com [icloud-relay]: https://support.apple.com/en-us/HT212614\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"22 February 2023","externalUrl":null,"permalink":"/blog/safari-no-connection/","section":"","summary":"I just spent the past 45 minutes trying to troubleshoot an internet connection problem on my work computers… While trying to set up Tapbots new Mastodon client [Ivory][ivory], I couldn\u0026rsquo;t get the authentication page to load in Safari.","title":"Safari No Connection","type":"blog"},{"content":"","date":"5 February 2023","externalUrl":null,"permalink":"/tags/3d-printer/","section":"Tags","summary":"","title":"3d-Printer","type":"tags"},{"content":"Just before Christmas, I purchased a Creality Ender 3 Neo (v1) printer on discount. Up to now, I\u0026rsquo;ve been working with a Monoprice Select Mini Pro (purchased at the start of the pandemic so I could work on 3D modeling projects at home…). That never really took off… partly because the Monoprice machine was soooo difficult to work with that larger prints were impossible. In addition, the bed size on the machine was 6\u0026quot; x 6\u0026quot;, pretty small for a lot of projects.\nFast forward to this Christmas, I wanted to make some 3D printed projects for gifts and needed to work on some of them at home. I saw a good price on the Ender 3 Neo v11 and decided to grab it. After some assembly, I had a massive machine on my desk (compared to the Monoprice one), but it had a decent sized glass build plate, auto bed leveling, and the promise of better print quality. I made one or two test prints to check the bed adhesion and leveling with success. Then I tried a longer print (can\u0026rsquo;t even recall what). It looked like everything was going well after 10 minutes, so I went downstairs to grab some dinner. After a few minutes, I hear a raucous beep coming from the printer. When I checked on the screen, it was complaining about a \u0026ldquo;Thermal Runaway\u0026rdquo;.\nI figured this was a one-time issue, so I resliced the print, sent it back over to the machine, and started again. Again, after about 30 minutes, the printer gave off an awful beep and complained about a thermal runaway. This happened a number of times, so I gave up for a bit. I did a bit of research online and a number of posts pointed me toward PID tuning, loose screws on the thermocouple, and suggestions to replace the firmware with Marlin. I checked the screws (tight, no issue) and decided it wasn\u0026rsquo;t worth messing with PID tuning if I was going to replace the firmware… by this time, it was late and I had family coming soon, so I turned off the printer and left it to gather dust for a few weeks.\nThis afternoon, I decided to try to make some progress on the matter. Before pulling the trigger on new firmware,2 I did a bit more reading on the matter on some Stackexchange and Reddit posts. One post in particular suggested the most ridiculous solution… obviously this couldn\u0026rsquo;t possibly the the answer, right!? If you didn\u0026rsquo;t click through, the poster suggested checking to make sure the power supply was set to the right voltage (115V/230V). The only reason this felt ridiculous was that I had to select my voltage and plug locale for the printer on checkout, so I assumed that those values would be correctly configured for my region. Turns out, I was wrong. My power supply was set to 115V. A quick flip of the switch and I\u0026rsquo;m back in business.3\nFollow-up # The printer is working incredibly well. Once I set the voltage correctly and tuned the z-offset, printing in PLA and PETG have been nearly flawless. I need to do a bit of tuning to get rid of some wispy stringing, but it\u0026rsquo;s so light that it just brushes off the surface, more an inconvenience than a real flaw in the prints.\nA travel case for my Pinecil v2 and some accessories printed in blue and yellow PLA. Some wispy bits of PLA can be seen hanging off the hinge. They generally just brush off like spiderwebs. Creality has the worst model distinctions… well, except for Monoprice, Flashforge, and every other inexpensive 3D printer manufacturer\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nI might still do this just because I like some of the features enabled with Marlin.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nHopefully. I have to actually run one of those prints now, setting it up as soon as this post is finished.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"5 February 2023","externalUrl":null,"permalink":"/blog/ender3-thermal-runaway/","section":"","summary":"Just before Christmas, I purchased a Creality Ender 3 Neo (v1) printer on discount. Up to now, I\u0026rsquo;ve been working with a Monoprice Select Mini Pro (purchased at the start of the pandemic so I could work on 3D modeling projects at home…).","title":"Thermal Runaway error on Creality Ender 3 Neo","type":"blog"},{"content":"","date":"3 February 2023","externalUrl":null,"permalink":"/tags/hugo/","section":"Tags","summary":"","title":"Hugo","type":"tags"},{"content":"","date":"3 February 2023","externalUrl":null,"permalink":"/tags/lektor/","section":"Tags","summary":"","title":"Lektor","type":"tags"},{"content":"I\u0026rsquo;ve decided to migrate my site from Lektor to Hugo. This is solely because Hugo seems to have far more community surrounding it. I don\u0026rsquo;t think I\u0026rsquo;m ever going to dig far enough into my site to muck with or redesign the core generator, so having a Python-based SSG doesn\u0026rsquo;t make sense as a decision point. I think the way Hugo handles content and files makes more sense in my brain. Plus, the fact that it\u0026rsquo;s brew installable is a big plus… having to remember to install Lektor on each machine and remember how and where it\u0026rsquo;s installed was one bit of friction too many. Hopefully I\u0026rsquo;ll be better about whipping out quick posts this way.\nThe migration has been pretty simple, once I went through the quickstart guide for Hugo. I\u0026rsquo;m using the Blowfish theme for the moment. I like that it supports KaTeX for math input, has syntax highlighting support, and the example site caught my eye. Another big plus to Hugo is that the page files are standard Markdown (Commonmark, but essentially the same thing). This means that metadata makes more sense, and my text editor recognizes the .md extension.\n","date":"3 February 2023","externalUrl":null,"permalink":"/blog/site-move-hugo/","section":"","summary":"I\u0026rsquo;ve decided to migrate my site from Lektor to Hugo. This is solely because Hugo seems to have far more community surrounding it. I don\u0026rsquo;t think I\u0026rsquo;m ever going to dig far enough into my site to muck with or redesign the core generator, so having a Python-based SSG doesn\u0026rsquo;t make sense as a decision point.","title":"Migrating the site to Hugo","type":"blog"},{"content":"","date":"3 February 2023","externalUrl":null,"permalink":"/tags/site/","section":"Tags","summary":"","title":"Site","type":"tags"},{"content":"","date":"15 November 2022","externalUrl":null,"permalink":"/tags/3d-design/","section":"Tags","summary":"","title":"3d-Design","type":"tags"},{"content":"","date":"15 November 2022","externalUrl":null,"permalink":"/tags/f360/","section":"Tags","summary":"","title":"F360","type":"tags"},{"content":"While mocking up a sample holder, I wanted to go back and edit a pattern object that was embedded in a sketch. Since sketch actions don\u0026rsquo;t appear in the history scrubber (one item for the entire sketch), I couldn\u0026rsquo;t go to my default action of right-click\u0026gt;Edit on the object in the history scrubber.\nAfter a bit of searching, I found an old blog post that hinted there was an answer… but the video showing the answer is missing. Instead, I came across a post in the f360 forums that described how and where to make the edit.\nFirst, open the sketch to start editing it Then, double click on the pattern icon (shown in the screenshot below). This will pull up the Edit Pattern dialog, and you can make the required changes. ","date":"15 November 2022","externalUrl":null,"permalink":"/blog/f360-sketch-pattern/","section":"","summary":"While mocking up a sample holder, I wanted to go back and edit a pattern object that was embedded in a sketch. Since sketch actions don\u0026rsquo;t appear in the history scrubber (one item for the entire sketch), I couldn\u0026rsquo;t go to my default action of right-click\u0026gt;Edit on the object in the history scrubber.","title":"TIL – How to edit sketch patterns in Fusion360","type":"blog"},{"content":"While trying to post the previous item, I couldn\u0026rsquo;t get the local image to display. I tried placing the PNG file in the post folder with the contents.lr file, then linking with ![alt-text](image.png), but couldn\u0026rsquo;t get the page to render with the image.\nI found an old StackExchange response that suggested placing the image in the assets/static folder, then setting the path to /static/assets/image.png, but that didn\u0026rsquo;t net me any results.\nOddly enough, when I view the web editor, the image is listed as an attachment to the page…\nAs a next step, I started investigating how Lektor handles paths. From a brief read on that page, it seems like the image should be able to reside in the same folder as the post contents.lr file, and the path just needs to be image.png, but this definitely doesn\u0026rsquo;t work. What am I doing wrong?\n\u0026ndash;EDIT\u0026ndash; # I\u0026rsquo;m so dumb… Because of the text cropping, I couldn\u0026rsquo;t tell that the name of my image was misspelled… instead of screenshot_pattern_edit.png, it was named screenshot_patter_edit.png, and that missing \u0026ldquo;n\u0026rdquo; made all the difference in the world. Now that I spelled it correctly, the image is attaching correctly. I think I\u0026rsquo;ll stick with Lektor now, since it was entirely my fault.\n","date":"15 November 2022","externalUrl":null,"permalink":"/blog/lektor-attach-image/","section":"","summary":"While trying to post the previous item, I couldn\u0026rsquo;t get the local image to display. I tried placing the PNG file in the post folder with the contents.lr file, then linking with !","title":"TIL – Linking (and attaching) a local image in Lektor","type":"blog"},{"content":"","date":"22 April 2022","externalUrl":null,"permalink":"/tags/github-pages/","section":"Tags","summary":"","title":"Github-Pages","type":"tags"},{"content":" GitHub Pages # This site is hosted using GitHub Pages, a hosting service available to all GitHub accounts (for free!). Setting up Lektor to deploy to GitHub is very simple once you\u0026rsquo;ve configured your machine to connect to GitHub using an SSH connection.\nInstructions can be found in the Lektor deployment docs, but here\u0026rsquo;s a brief summary:\nAdd the following line to your Lektor project config file (project_name.lektorproject) in the root folder of your site: [servers.ghpages] target = ghpages://your-user/your-repository If the repository is username.github.io, this will be published to your default user site ( https://username.github.io). Otherwise, it will be published to the project-specific page ( https://username.github.io/project-name) Once this is set up, you can deploy the current build of your site by executing lektor build \u0026amp;\u0026amp; lektor deploy from the command line. ","date":"22 April 2022","externalUrl":null,"permalink":"/blog/site-publication/","section":"","summary":"GitHub Pages # This site is hosted using GitHub Pages, a hosting service available to all GitHub accounts (for free!). Setting up Lektor to deploy to GitHub is very simple once you\u0026rsquo;ve configured your machine to connect to GitHub using an SSH connection.","title":"Website publication","type":"blog"},{"content":" The site # This site is meant to be a brain dump for the assorted projects and task I take on at Hunter College. I will likely end up being a collection of comments, tips and tricks for specific instruments, and rundowns of my experiences with instrumentation in various states of disrepair. Most of the content is meant to be an easy reference for myself, but hopefully someone else finds bits of it useful.\nHow it\u0026rsquo;s made # This site was designed using Lektor, a static site generator built in Python. The goals in doing this include those mentioned above (mostly helping me better document my work), learning some simple web design, and giving myself a simple software project to complete.\nThe steps to create the site are as follows:\nDownload and install Python (I use pyenv) Create a virtual environment for the site using Mamba/ Anaconda, pyenv-virtualenv, or venv (I use pyenv-virtualenv, just to keep some consistency, but venv might be easiest, as it\u0026rsquo;s built into modern versions of Python). After activating the virtual environment, use run pip install lektor (or mamba/conda, if you went that route) to install the site generator. You can create a blank site template quickly by running lektor quickstart and following the prompts. Just like that, you have an empty site. Time to fill it with knowledge! ","date":"19 April 2022","externalUrl":null,"permalink":"/blog/hello-website/","section":"","summary":"The site # This site is meant to be a brain dump for the assorted projects and task I take on at Hunter College. I will likely end up being a collection of comments, tips and tricks for specific instruments, and rundowns of my experiences with instrumentation in various states of disrepair.","title":"Hello Website","type":"blog"},{"content":"I\u0026rsquo;m a research associate in electronics at Hunter College trained in instrumental and inorganic chemistry, specifically in low-temperature optical and nuclear magnetic resonance processes in GaAs (a bit of optics, some cryogenics, some high power RF electronics, and a bit of solid-state physics).\nIn my current position, I perform routine (and not so routine) maintenance on a number of systems, ranging from simple repairs on rotary evaporators, chillers, and spectrophotometers to triage maintenance on the electron microscope. I also operate the two 3D printers for the chemistry department (an Ultimaker 3 FDM printer and a Form 2 SLA printer). On the side, I\u0026rsquo;ve been working to teach myself Python and set up a Jupyter-based curriculum for our second-semester Physical Chemistry lab (kinetics and quantum chemistry).\nThis site includes musings on electronics repair, facility maintenance, coding, and Apple-related technology by a chemist and self-identified jack-of-all-trades (and as a consequence, master of none).\nContact # I periodically post on Mastodon as @mskblackbelt@scicomm.xyz.\n","date":"1 January 0001","externalUrl":null,"permalink":"/about/","section":"","summary":"I\u0026rsquo;m a research associate in electronics at Hunter College trained in instrumental and inorganic chemistry, specifically in low-temperature optical and nuclear magnetic resonance processes in GaAs (a bit of optics, some cryogenics, some high power RF electronics, and a bit of solid-state physics).","title":"About Me","type":"page"},{"content":"","date":"1 January 0001","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"This is a list of my projects:\nPhysical chemistry lab guides Project 2 Project 3 ","date":"1 January 0001","externalUrl":null,"permalink":"/projects/","section":"","summary":"This is a list of my projects:\nPhysical chemistry lab guides Project 2 Project 3 ","title":"Projects","type":"page"},{"content":"","date":"1 January 0001","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"}]